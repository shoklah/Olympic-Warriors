# Generated by Django 4.2.14 on 2024-07-29 19:25

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Discipline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "rules",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="manuals/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf"]
                            )
                        ],
                        verbose_name="rules",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Edition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(2020),
                            django.core.validators.MaxValueValidator(2030),
                        ]
                    ),
                ),
                ("host", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "registration_form",
                    models.FileField(
                        blank=True, null=True, upload_to="registration_forms/"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score1",
                    models.IntegerField(
                        default=0,
                        verbose_name=django.core.validators.MinValueValidator(0),
                    ),
                ),
                (
                    "score2",
                    models.IntegerField(
                        default=0,
                        verbose_name=django.core.validators.MinValueValidator(0),
                    ),
                ),
                ("date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "discipline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discipline",
                        to="olympic_warriors.discipline",
                    ),
                ),
                (
                    "edition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="olympic_warriors.edition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GameEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    models.DateTimeField(blank=True, default=datetime.datetime.now),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game",
                        to="olympic_warriors.game",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ]
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "captain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="captain",
                        to="olympic_warriors.player",
                    ),
                ),
                (
                    "edition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="olympic_warriors.edition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Blindtest",
            fields=[
                (
                    "discipline_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.discipline",
                    ),
                ),
            ],
            bases=("olympic_warriors.discipline",),
        ),
        migrations.CreateModel(
            name="Crossfit",
            fields=[
                (
                    "discipline_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.discipline",
                    ),
                ),
            ],
            bases=("olympic_warriors.discipline",),
        ),
        migrations.CreateModel(
            name="Dodgeball",
            fields=[
                (
                    "discipline_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.discipline",
                    ),
                ),
            ],
            bases=("olympic_warriors.discipline",),
        ),
        migrations.CreateModel(
            name="DodgeballEvent",
            fields=[
                (
                    "gameevent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.gameevent",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("HIT", "Hit"),
                            ("FOL", "Foul"),
                            ("OUT", "Outbounds"),
                            ("NEW", "New Round"),
                        ],
                        max_length=3,
                    ),
                ),
            ],
            bases=("olympic_warriors.gameevent",),
        ),
        migrations.CreateModel(
            name="HideAndSeek",
            fields=[
                (
                    "discipline_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.discipline",
                    ),
                ),
            ],
            bases=("olympic_warriors.discipline",),
        ),
        migrations.CreateModel(
            name="Orienteering",
            fields=[
                (
                    "discipline_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.discipline",
                    ),
                ),
            ],
            bases=("olympic_warriors.discipline",),
        ),
        migrations.CreateModel(
            name="Rugby",
            fields=[
                (
                    "discipline_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.discipline",
                    ),
                ),
            ],
            bases=("olympic_warriors.discipline",),
        ),
        migrations.CreateModel(
            name="RugbyEvent",
            fields=[
                (
                    "gameevent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="olympic_warriors.gameevent",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("TRY", "Try"),
                            ("TKL", "Tackle"),
                            ("FOL", "Foul"),
                            ("OUT", "Outbounds"),
                        ],
                        max_length=3,
                    ),
                ),
            ],
            bases=("olympic_warriors.gameevent",),
        ),
        migrations.CreateModel(
            name="TeamResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                (
                    "discipline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registered_to",
                        to="olympic_warriors.discipline",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registered_team",
                        to="olympic_warriors.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("identifier", models.CharField(max_length=4)),
                (
                    "rating",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ]
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="olympic_warriors.player",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="player",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="olympic_warriors.team"
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="gameevent",
            name="player1",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="player1",
                to="olympic_warriors.player",
            ),
        ),
        migrations.AddField(
            model_name="gameevent",
            name="player2",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="player2",
                to="olympic_warriors.player",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="referees",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="referees",
                to="olympic_warriors.team",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="team1",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="team1",
                to="olympic_warriors.team",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="team2",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="team2",
                to="olympic_warriors.team",
            ),
        ),
        migrations.AddField(
            model_name="discipline",
            name="edition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="olympic_warriors.edition",
            ),
        ),
        migrations.AddField(
            model_name="discipline",
            name="teams",
            field=models.ManyToManyField(
                through="olympic_warriors.TeamResult", to="olympic_warriors.team"
            ),
        ),
        migrations.CreateModel(
            name="BlindtestGuess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.CharField(max_length=100)),
                ("is_valid", models.BooleanField(default=False)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team",
                        to="olympic_warriors.team",
                    ),
                ),
            ],
        ),
    ]
